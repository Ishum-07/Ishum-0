# Obfuscated with PyObfuscate
# https://www.github.com/htr-tech
# Time : Fri Apr  5 20:36:05 2024
# -------------------------------
_ = lambda __ : __import__('marshal').loads(__import__('base64').b64decode(__[::-1]));exec((_)(b'=='))